<?xml version="1.0" encoding="UTF-8"?>
<ruleset name="MetaModels">
  <description>The coding standard of the MetaModels team, based on the Generic, PSR2, Squiz, TYPO3 and Zend coding standards.</description>
  <!-- 2. General -->
  <!-- Exclude git -->
  <exclude-pattern>*/.git/*</exclude-pattern>
  <!-- Exclude third party code -->
  <exclude-pattern>*/vendor/*</exclude-pattern>
  <!-- Exclude javascript -->
  <exclude-pattern>*/html/*</exclude-pattern>
  <!-- Exclude auto generated language files. -->
  <exclude-pattern>*/languages/*/*.php</exclude-pattern>
  <!-- Exclude auto generated autoload and config file. -->
  <exclude-pattern>*/config/autoload.php</exclude-pattern>
  <exclude-pattern>*/config/config.php</exclude-pattern>
  <exclude-pattern>*/tests/bootstrap.php</exclude-pattern>
  <!-- 2.1 Basic Coding Standard -->
  <!-- Include the whole PSR-2 standard -->
  <rule ref="PSR2"/>

  <rule ref="Squiz.Arrays.ArrayBracketSpacing" />

  <!-- Classes -->
  <rule ref="Generic.Classes.DuplicateClassName" />
  <rule ref="Squiz.Classes.ClassFileName" />
  <rule ref="Squiz.Classes.LowercaseClassKeywords" />
  <rule ref="Squiz.Classes.SelfMemberReference" />
  <rule ref="MetaModels.Classes.LowercaseClassKeywords" />

  <!-- CodeAnalysis -->
  <!-- rule ref="Generic.CodeAnalysis.EmptyStatement" /   overridden by Squiz.CodeAnalysis.EmptyStatement below -->
  <rule ref="Generic.CodeAnalysis.ForLoopShouldBeWhileLoop" />
  <rule ref="Generic.CodeAnalysis.ForLoopWithTestFunctionCall" />
  <rule ref="Generic.CodeAnalysis.JumbledIncrementer" />
  <rule ref="Generic.CodeAnalysis.UnconditionalIfStatement" />
  <rule ref="Generic.CodeAnalysis.UnnecessaryFinalModifier" />
  <rule ref="Generic.CodeAnalysis.UnusedFunctionParameter" />
  <rule ref="Generic.CodeAnalysis.UselessOverridingMethod" />
  <rule ref="Squiz.CodeAnalysis.EmptyStatement" />
  <!-- Commenting -->
  <rule ref="Generic.Commenting.Fixme" />
  <rule ref="Generic.Commenting.Todo" />
  <rule ref="MetaModels.Commenting.BlockComment" />
  <rule ref="Squiz.Commenting.DocCommentAlignment" />
  <rule ref="Squiz.Commenting.EmptyCatchComment" />
  <rule ref="MetaModels.Commenting.FunctionComment.SpacingAfterParams">
    <severity>0</severity>
  </rule>
  <rule ref="MetaModels.Commenting.FunctionComment.IncorrectParamVarName">
    <!-- if we are ok with using integer/boolean/... instead of int/bool, enable this again. -->
    <severity>0</severity>
  </rule>
  <rule ref="MetaModels.Commenting.FunctionComment.TypeHintMissing">
    <!-- We definately do NOT want to enforce type hints everywhere. -->
    <severity>0</severity>
  </rule>
  <rule ref="Squiz.Commenting.FunctionCommentThrowTag" />
  <rule ref="MetaModels.Commenting.InlineComment" />
  <rule ref="Squiz.Commenting.PostStatementComment" />
  <rule ref="MetaModels.Commenting.VariableComment" />
  <rule ref="PEAR.Commenting.InlineComment" />
  <rule ref="MetaModels.Commenting.ClassDocComment" />
  <rule ref="MetaModels.Commenting.DoubleSlashCommentsInNewLine" />
  <rule ref="MetaModels.Commenting.SpaceAfterDoubleSlash" />

  <!-- Control structures -->
  <rule ref="MetaModels.ControlStructures.ControlSignature" />
  <rule ref="MetaModels.ControlStructures.AlignedBreakStatement" />
  <rule ref="MetaModels.ControlStructures.DisallowElseIfConstruct" />
  <rule ref="MetaModels.ControlStructures.ValidBreakStatementsInSwitches" />
  <rule ref="MetaModels.ControlStructures.ValidDefaultStatementsInSwitches" />

  <!-- Debug -->
  <rule ref="MetaModels.Debug.DebugCode" />

  <!-- Files -->
  <rule ref="Generic.Files.EndFileNewline" />
  <rule ref="Generic.Files.OneClassPerFile" />
  <rule ref="Generic.Files.OneInterfacePerFile" />
  <rule ref="MetaModels.Files.EncodingUtf8" />
  <rule ref="MetaModels.Files.IncludingFile" />

  <!-- Formatting -->
  <rule ref="Generic.Formatting.MultipleStatementAlignment" />
  <rule ref="Generic.Formatting.NoSpaceAfterCast" />
  <rule ref="Squiz.Formatting.OperatorBracket" />

  <!-- Functions -->
  <rule ref="Generic.Functions.CallTimePassByReference" />
  <rule ref="Generic.Functions.OpeningFunctionBraceBsdAllman" />
  <rule ref="Squiz.Functions.FunctionDuplicateArgument" />
  <rule ref="Squiz.Functions.GlobalFunction" />
  <rule ref="Squiz.Scope.MethodScope" />

  <!-- Metrics -->
  <rule ref="Generic.Metrics.CyclomaticComplexity" />
  <rule ref="Generic.Metrics.NestingLevel" />

  <!-- NamingConventions -->
  <rule ref="Generic.NamingConventions.CamelCapsFunctionName">
    <properties>
      <property name="strict" value="false" />
    </properties>
  </rule>
  <rule ref="Generic.NamingConventions.ConstructorName" />
  <rule ref="MetaModels.NamingConventions.ValidVariableName">
    <properties>
      <property name="allowedAcronyms" type="array" value="FE,BE,DC,DCA,DB,ID,SQL,PHP" />
    </properties>
  </rule>
  <rule ref="MetaModels.NamingConventions.ValidFunctionName">
    <properties>
      <property name="allowedAcronyms" type="array" value="FE,BE,DC,DCA,DB,ID,AUX,SQL,PHP" />
    </properties>
  </rule>

  <!-- Objects -->
  <rule ref="Squiz.Objects.DisallowObjectStringIndex" />
  <!-- Operators -->
  <rule ref="Squiz.Operators.IncrementDecrementUsage" />
  <rule ref="Squiz.Operators.ValidLogicalOperators" />

  <!-- PHP -->
  <rule ref="Generic.PHP.CharacterBeforePHPOpeningTag" />
  <rule ref="Generic.PHP.DeprecatedFunctions" />
  <rule ref="Generic.PHP.DisallowShortOpenTag" />
  <rule ref="Generic.PHP.ForbiddenFunctions" />
  <rule ref="Generic.PHP.NoSilencedErrors" />
  <rule ref="Generic.PHP.SAPIUsage" />
  <rule ref="MetaModels.PHP.CommentedOutCode" />
  <rule ref="Squiz.PHP.DisallowSizeFunctionsInLoops" />
  <rule ref="Squiz.PHP.Eval">
    <exclude-pattern>*/test/*</exclude-pattern>
  </rule>
  <rule ref="Squiz.PHP.GlobalKeyword" />
  <rule ref="Squiz.PHP.LowercasePHPFunctions" />
  <rule ref="Squiz.PHP.NonExecutableCode" />
  <rule ref="MetaModels.PHP.CharacterAfterPHPClosingTag" />
  <rule ref="MetaModels.PHP.CharacterBeforePHPOpeningTag" />
  <rule ref="MetaModels.PHP.DisallowMultiplePHPTags" />

  <!-- Scope -->
  <rule ref="Squiz.Scope.MemberVarScope" />
  <rule ref="Squiz.Scope.StaticThisUsage" />
  <rule ref="MetaModels.Scope.AlwaysReturn" />

  <!-- Strings -->
  <rule ref="Squiz.Strings.DoubleQuoteUsage" />
  <rule ref="Squiz.Strings.EchoedStrings" />
  <rule ref="MetaModels.Strings.UnnecessaryStringConcat" />

  <!-- Whitespace -->
  <rule ref="Squiz.WhiteSpace.CastSpacing" />
  <rule ref="Squiz.WhiteSpace.SemicolonSpacing" />
  <rule ref="Squiz.WhiteSpace.LogicalOperatorSpacing" />
  <rule ref="MetaModels.WhiteSpace.AssignmentArithmeticAndComparisonSpace" />
  <rule ref="MetaModels.WhiteSpace.AsteriksWhitespaces" />
  <rule ref="MetaModels.WhiteSpace.WhitespaceAfterCommentSigns" />
</ruleset>
